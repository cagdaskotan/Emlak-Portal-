@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Tüm İlanlar";
}

<style>
    /* Filtre Kartı */
    .filter-card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.07);
        background-color: #ffffff;
    }

        .filter-card .card-header {
            background: linear-gradient(135deg, #0d6efd, #198754);
            color: white;
            font-weight: 600;
            border-top-left-radius: 16px;
            border-top-right-radius: 16px;
        }

        .filter-card .form-label {
            font-weight: 500;
        }

        .filter-card .form-control,
        .filter-card .form-select {
            border-radius: 8px;
        }

        .filter-card .btn {
            border-radius: 30px;
        }

    .listing-card {
        border-radius: 16px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        overflow: hidden;
    }

        .listing-card .card-img-top {
            border-top-left-radius: 16px;
            border-top-right-radius: 16px;
            object-fit: cover;
            aspect-ratio: 16/9;
        }

        .listing-card .card-body {
            padding: 1rem;
        }

    .favorite-btn {
        font-size: 1.2rem;
    }

        .favorite-btn:hover {
            transform: scale(1.2);
            transition: 0.2s;
        }

    .btn-outline-primary {
        border-radius: 30px;
    }

    .text-truncate {
        max-width: 85%;
    }
</style>

<h1 class="text-center mb-5 fw-bold">Tüm İlanlar</h1>

<div class="container">
    <div class="row">
        <!-- Sol: Filtre -->
        <div class="col-md-3">
            <div class="card mb-4 filter-card">
                <div class="card-header fw-bold">Filtrele</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label>🔍 Kelime Arama</label>
                        <input type="text" id="searchKeyword" class="form-control" placeholder="İlan başlığı..." />
                    </div>
                    <div class="mb-3">
                        <label>📍 Şehir</label>
                        <select id="filterCity" class="form-select"></select>
                    </div>
                    <div class="mb-3">
                        <label>💸 Fiyat Aralığı</label>
                        <div class="d-flex">
                            <input type="number" id="minPrice" class="form-control me-2" placeholder="Min" />
                            <input type="number" id="maxPrice" class="form-control" placeholder="Max" />
                        </div>
                    </div>
                    <div class="d-flex justify-content-between">
                        <button class="btn btn-primary w-100 me-1" id="btnFilter">Filtrele</button>
                        <button class="btn btn-secondary w-100 ms-1" id="btnReset">Sıfırla</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- İlanlar Kısmı -->
        <div class="col-md-9">
            <div class="row" id="listingsContainer"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const apiBaseUrl = "@ViewBag.ApiBaseURL";
            const token = localStorage.getItem("token");

            getCities();
            getListings();

            function getCities() {
                $.ajax({
                    url: apiBaseUrl + "/City",
                    method: "GET",
                    headers: { "Authorization": "Bearer " + token },
                    success: function (cities) {
                        let options = `<option value="">Tümü</option>`;
                        cities.forEach(city => {
                            options += `<option value="${city.name}">${city.name}</option>`;
                        });
                        $("#filterCity").html(options);
                    }
                });
            }

            function getListings(filters = {}) {
                $.ajax({
                    url: apiBaseUrl + "/Listing/Public",
                    method: "GET",
                    headers: { "Authorization": "Bearer " + token },
                    success: function (listings) {
                        $.ajax({
                            url: apiBaseUrl + "/Favorite",
                            method: "GET",
                            headers: { "Authorization": "Bearer " + token },
                            success: function (favorites) {
                                renderListings(applyFilters(listings, filters), favorites);
                            },
                            error: function () {
                                renderListings(applyFilters(listings, filters), []);
                            }
                        });
                    }
                });
            }

            function applyFilters(listings, filters) {
                return listings.filter(item => {
                    const keyword = filters.keyword?.toLowerCase() || "";
                    const city = filters.city || "";
                    const min = parseFloat(filters.minPrice) || 0;
                    const max = parseFloat(filters.maxPrice) || Infinity;

                    const matchKeyword = item.title.toLowerCase().includes(keyword);
                    const matchCity = city === "" || item.city?.name === city;
                    const matchPrice = item.price >= min && item.price <= max;

                    return matchKeyword && matchCity && matchPrice;
                });
            }

            function renderListings(data, favorites) {
                let html = "";

                data.forEach(item => {
                    const isFavorite = favorites.some(f => f.listingId === item.id);
                    const heartIcon = isFavorite ? "text-danger" : "text-secondary";
                    const category = item.category?.name || "";
                    let categoryBadge = `<span class="badge bg-secondary">${category}</span>`;
                    if (category.toLowerCase() === "satılık") categoryBadge = `<span class="badge bg-success">Satılık</span>`;
                    if (category.toLowerCase() === "kiralık") categoryBadge = `<span class="badge bg-primary">Kiralık</span>`;

                    const imageSlides = item.images?.length > 0
                        ? item.images.map((img, i) => `<div class="carousel-item ${i === 0 ? 'active' : ''}"><img src="${img.imageUrl}" class="d-block w-100" style="aspect-ratio: 16/9; object-fit: cover;" /></div>`).join('')
                        : `<div class="carousel-item active"><img src="https://via.placeholder.com/400x300?text=No+Image" class="d-block w-100" style="aspect-ratio: 16/9; object-fit: cover;" /></div>`;

                    const sliderControls = item.images?.length > 1
                        ? `<button class="carousel-control-prev" type="button" data-bs-target="#carousel-${item.id}" data-bs-slide="prev"><span class="carousel-control-prev-icon"></span></button><button class="carousel-control-next" type="button" data-bs-target="#carousel-${item.id}" data-bs-slide="next"><span class="carousel-control-next-icon"></span></button>`
                        : "";

                    html += `
            <div class="col-lg-4 col-md-6 mb-4 d-flex align-items-stretch">
                <div class="card shadow-sm border-0 listing-card">
                    <div class="overflow-hidden">
                        <div id="carousel-${item.id}" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">${imageSlides}</div>
                            ${sliderControls}
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-0 text-truncate" title="${item.title}">${item.title}</h5>
                            <i class="fas fa-heart favorite-btn ${heartIcon}" data-id="${item.id}" style="cursor:pointer;"></i>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-2 mb-2">
                            ${categoryBadge}
                            <span class="text-muted fw-bold">${item.price} ₺</span>
                        </div>
                        <p class="mb-1 text-muted small"><strong>${item.city?.name || 'Belirtilmemiş'}</strong></p>
                        <p class="card-text text-muted small">${item.description.substring(0, 100)}...</p>
                        <a href="/Home/Details?id=${item.id}" class="btn btn-outline-primary btn-sm w-100 mt-2">Detaylar</a>
                    </div>
                </div>
            </div>`;

                });

                $("#listingsContainer").html(html);
            }

            $(document).on("click", ".favorite-btn", function () {
                const listingId = $(this).data("id");
                const $icon = $(this);
                const isFav = $icon.hasClass("text-danger");

                if (!token) return alert("Favorilere eklemek için giriş yapmalısınız.");

                if (!isFav) {
                    $.ajax({
                        url: apiBaseUrl + "/Favorite/Add",
                        method: "POST",
                        headers: { "Authorization": "Bearer " + token },
                        contentType: "application/json",
                        data: JSON.stringify({ listingId }),
                        success: function (res) {
                            if (res.status) $icon.removeClass("text-secondary").addClass("text-danger");
                        }
                    });
                } else {
                    $.ajax({
                        url: apiBaseUrl + "/Favorite/" + listingId,
                        method: "DELETE",
                        headers: { "Authorization": "Bearer " + token },
                        success: function (res) {
                            if (res.status) $icon.removeClass("text-danger").addClass("text-secondary");
                        }
                    });
                }
            });

            $("#btnFilter").click(function () {
                const filters = {
                    keyword: $("#searchKeyword").val(),
                    city: $("#filterCity").val(),
                    minPrice: $("#minPrice").val(),
                    maxPrice: $("#maxPrice").val(),
                };
                getListings(filters);
            });

            $("#btnReset").click(function () {
                $("#searchKeyword").val("");
                $("#filterCity").val("");
                $("#minPrice").val("");
                $("#maxPrice").val("");
                getListings();
            });
        });
    </script>
}
